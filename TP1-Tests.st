TestCase subclass: #AlgoVidTest	instanceVariableNames: 'algovid'	classVariableNames: ''	package: 'TP1-Tests'!!AlgoVidTest methodsFor: 'tests' stamp: 'Seba 4/25/2021 01:23'!test03SiEsSospechosxDeCovidConDosSintomasOMenosNoPuedeCircular  algovid nuevaPersona: 'Nico'.  algovid estaVacunadx: 'Nico'.  "Uno o dos síntomas lo hace sospechoso"   algovid agregarSintoma: 'Fiebre' a: 'Nico'.	  self assert: (algovid diagnosticoDe: 'Nico') equals: 'Sospechoso'.   self deny: (algovid puedeCircular: 'Nico').  algovid agregarSintoma: 'Tos' a: 'Nico'.  self assert: (algovid diagnosticoDe: 'Nico') equals: 'Sospechoso'.   self deny: (algovid puedeCircular: 'Nico').! !!AlgoVidTest methodsFor: 'tests' stamp: 'Seba 4/25/2021 01:25'!test08SiEsPersonalEsencialPeroTieneContactoEstrechoConUnCasoSospechosoNoPuedeCircular  algovid nuevaPersona: 'Diego'.   "Un síntoma lo hace sospechoso"  algovid agregarSintoma: 'Dolor de garganta' a: 'Diego'.  self assert: (algovid diagnosticoDe: 'Diego') equals: 'Sospechoso'.   algovid nuevaPersona: 'Edson'.  algovid esPersonalEsencial: 'Edson'.  algovid contactoEstrechoEntre: 'Edson' y: 'Diego'.   self deny: (algovid puedeCircular: 'Edson').! !!AlgoVidTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 01:12'!test17SiPersonaNoExisteEstaVacunadxLanzaNoSePudoObtenerself should: [algovid estaVacunadx: 'Martín'] raise: NoSePudoObtenerPersona.! !!AlgoVidTest methodsFor: 'tests' stamp: 'Seba 5/8/2021 10:20'!test16SiMasDel40PorcientoDeLasBurbujasEstanPinchadasEntoncesLasClasesNoSonPresenciales  algovid nuevaPersona: 'Thiago'.  algovid nuevaPersona: 'Pablo'.   algovid nuevaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Thiago' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Pablo' aLaBurbuja: 'Ayudantes Algo3'.  algovid nuevaPersona: 'Martín'.  algovid nuevaPersona: 'Cami'.  algovid nuevaBurbuja: 'Ayudantes Algo2'.  algovid agregarA: 'Martín' aLaBurbuja: 'Ayudantes Algo2'.  algovid agregarA: 'Cami' aLaBurbuja: 'Ayudantes Algo2'.  algovid nuevaPersona: 'Diego'.  algovid nuevaPersona: 'Valen'.  algovid nuevaBurbuja: 'Ayudantes Algo1'.  algovid agregarA: 'Diego' aLaBurbuja: 'Ayudantes Algo1'.  algovid agregarA: 'Valen' aLaBurbuja: 'Ayudantes Algo1'.  algovid nuevoColegio: 'UBA'.  algovid agregarA: 'Ayudantes Algo1' alColegio: 'UBA'.  algovid agregarA: 'Ayudantes Algo2' alColegio: 'UBA'.  algovid agregarA: 'Ayudantes Algo3' alColegio: 'UBA'.  algovid agregarSintoma: 'Fiebre' a: 'Diego'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Diego'.  algovid agregarSintoma: 'Tos' a: 'Diego'.  algovid agregarSintoma: 'Fiebre' a: 'Cami'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Cami'.  algovid agregarSintoma: 'Tos' a: 'Cami'.  self assert: (algovid diagnosticoDe: 'Diego') equals: 'Positivo'.   self assert: (algovid burbujaPinchada: 'Ayudantes Algo1').   self assert: (algovid diagnosticoDe: 'Cami') equals: 'Positivo'.   self assert: (algovid burbujaPinchada: 'Ayudantes Algo2').   self deny: (algovid clasesPresencialesEn: 'UBA').! !!AlgoVidTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 01:17'!test18AgregarPersonaABurbujaInexistenteLanzaNoSePudoObtenerBurbujaalgovid nuevaPersona: 'Martín'.self should:[algovid agregarA: 'Martín' aLaBurbuja: 'Algo3'] raise: NoSePudoObtenerBurbuja. ! !!AlgoVidTest methodsFor: 'tests' stamp: 'Seba 4/25/2021 01:27'!test02SiEstaVacunadxPuedeCircular  algovid nuevaPersona: 'Martín'.   algovid estaVacunadx: 'Martín'.  self assert: (algovid puedeCircular: 'Martín').! !!AlgoVidTest methodsFor: 'tests' stamp: 'Seba 4/25/2021 14:57'!test13SiAlguienEnLaBurbujaEsUnCasoConfirmadoEntoncesLaBurbujaEstaPinchada  algovid nuevaPersona: 'Thiago'.  algovid nuevaPersona: 'Pablo'.  algovid nuevaPersona: 'Santi'.   algovid nuevaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Thiago' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Pablo' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Santi' aLaBurbuja: 'Ayudantes Algo3'.  algovid estaVacunadx: 'Thiago'.  algovid estaVacunadx: 'Pablo'.  algovid estaVacunadx: 'Santi'.  algovid agregarSintoma: 'Fiebre' a: 'Pablo'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Pablo'.  algovid agregarSintoma: 'Diarrea' a: 'Pablo'.  self assert: (algovid diagnosticoDe: 'Pablo') equals: 'Positivo'.   self assert: (algovid burbujaPinchada: 'Ayudantes Algo3').   self deny: (algovid puedeCircular: 'Thiago').  self deny: (algovid puedeCircular: 'Santi').! !!AlgoVidTest methodsFor: 'tests' stamp: 'Seba 4/25/2021 01:24'!test04SiEsSospechosxDeCovidConTresSintomasNoPuedeCircular  algovid nuevaPersona: 'Tomás'.  algovid estaVacunadx: 'Tomás'.  "Tres síntomas, pero ningno habitual (fiebre, tos o cansancio) lo hace sospechoso"   algovid agregarSintoma: 'Dolor de garganta' a: 'Tomás'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Tomás'.  algovid agregarSintoma: 'Diarrea' a: 'Tomás'.	  self assert: (algovid diagnosticoDe: 'Tomás') equals: 'Sospechoso'.   self deny: (algovid puedeCircular: 'Tomás').! !!AlgoVidTest methodsFor: 'tests' stamp: 'Seba 4/25/2021 14:57'!test14SiAlguienEnLaBurbujaEsUnCasoSospechosoEntoncesLaBurbujaNoEstaPinchada  algovid nuevaPersona: 'Thiago'.  algovid nuevaPersona: 'Pablo'.  algovid nuevaPersona: 'Santi'.   algovid nuevaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Thiago' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Pablo' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Santi' aLaBurbuja: 'Ayudantes Algo3'.  algovid estaVacunadx: 'Thiago'.  algovid estaVacunadx: 'Pablo'.  algovid estaVacunadx: 'Santi'.  algovid agregarSintoma: 'Fiebre' a: 'Pablo'.  self assert: (algovid diagnosticoDe: 'Pablo') equals: 'Sospechoso'.   self deny: (algovid burbujaPinchada: 'Ayudantes Algo3').   self assert: (algovid puedeCircular: 'Thiago').  self assert: (algovid puedeCircular: 'Santi').! !!AlgoVidTest methodsFor: 'tests' stamp: 'Seba 4/25/2021 14:35'!test12SiEstaVacunadxYEsSospechosoNoPuedeCircular  algovid nuevaPersona: 'Martín'.   algovid estaVacunadx: 'Martín'.  algovid agregarSintoma: 'Fiebre' a: 'Martín'.  self deny: (algovid puedeCircular: 'Martín').! !!AlgoVidTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 01:23'!test22ColegioNuevoTieneClasesPresencialesalgovid nuevoColegio: 'UBA'.self assert: (algovid clasesPresencialesEn: 'UBA').! !!AlgoVidTest methodsFor: 'tests' stamp: 'Seba 4/25/2021 01:25'!test07SiEsPersonalEsencialPuedeCircular  algovid nuevaPersona: 'Eugenio'.   algovid esPersonalEsencial: 'Eugenio'.  self assert: (algovid puedeCircular: 'Eugenio').! !!AlgoVidTest methodsFor: 'tests' stamp: 'Seba 4/25/2021 01:24'!test06SiEsConfirmadoDeCovidCon4SintomasNoPuedeCircular  algovid nuevaPersona: 'Carlos'.  algovid estaVacunadx: 'Carlos'.  "Cuatro síntomas o más lo hace confirmado"   algovid agregarSintoma: 'Dolor de garganta' a: 'Carlos'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Carlos'.  algovid agregarSintoma: 'Diarrea' a: 'Carlos'.  algovid agregarSintoma: 'Pérdida del gusto' a: 'Carlos'.	  self assert: (algovid diagnosticoDe: 'Carlos') equals: 'Positivo'.   self deny: (algovid puedeCircular: 'Carlos').! !!AlgoVidTest methodsFor: 'tests' stamp: 'Seba 4/25/2021 14:32'!test09SiEsPersonalEsencialPeroTieneContactoEstrechoConUnCasoPositivoNoPuedeCircular  algovid nuevaPersona: 'Diego'.  "Cuatro síntomas lo hace confirmado"   algovid esPersonalEsencial: 'Diego'.  algovid agregarSintoma: 'Dolor de garganta' a: 'Diego'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Diego'.  algovid agregarSintoma: 'Diarrea' a: 'Diego'.  algovid agregarSintoma: 'Pérdida del gusto' a: 'Diego'.  self assert: (algovid diagnosticoDe: 'Diego') equals: 'Positivo'.   algovid nuevaPersona: 'Edson'.  algovid contactoEstrechoEntre: 'Edson' y: 'Diego'.   self deny: (algovid puedeCircular: 'Edson').! !!AlgoVidTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 01:42'!test23ContactoEstrechoEntreVacunadxYDefectoNoCambiaDiagnosticoDeVacubadxalgovid nuevaPersona: 'Martín'.algovid nuevaPersona: 'Laura'.algovid estaVacunadx: 'Laura'.algovid contactoEstrechoEntre: 'Laura' y: 'Martín'.self assert: (algovid diagnosticoDe: 'Laura') equals: 'Vacunadx'.! !!AlgoVidTest methodsFor: 'tests' stamp: 'Seba 4/25/2021 01:26'!test11SiEsPersonalEsencialYPersonaDeRiesgoNoPuedeCircular  algovid nuevaPersona: 'Mariano'.   algovid esPersonaDeRiesgo: 'Mariano'.  algovid esPersonalEsencial: 'Mariano'.  self deny: (algovid puedeCircular: 'Mariano').! !!AlgoVidTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 01:17'!test20AgregarPersonaInexistenteABurbujaLanzaNoSePudoObtenerPersonaalgovid nuevaBurbuja: 'Algo3'.self should: [ algovid agregarA: 'Martín' aLaBurbuja: 'Algo3' ] raise: NoSePudoObtenerPersona.! !!AlgoVidTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 01:18'!test19AgregarBurbujaInexistenteAColegioLanzaNoSePudoObtenerBurbujaalgovid nuevoColegio: 'UBA'.self should: [ algovid agregarA: 'Algo3' alColegio: 'UBA' ] raise: NoSePudoObtenerBurbuja.! !!AlgoVidTest methodsFor: 'tests' stamp: 'Seba 4/25/2021 15:05'!test15SiMenosDel40PorcientoDeLasBurbujasEstanPinchadasEntoncesLasClasesSonPresenciales  algovid nuevaPersona: 'Thiago'.  algovid nuevaPersona: 'Pablo'.   algovid nuevaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Thiago' aLaBurbuja: 'Ayudantes Algo3'.  algovid agregarA: 'Pablo' aLaBurbuja: 'Ayudantes Algo3'.  algovid nuevaPersona: 'Martín'.  algovid nuevaPersona: 'Cami'.  algovid nuevaBurbuja: 'Ayudantes Algo2'.  algovid agregarA: 'Martín' aLaBurbuja: 'Ayudantes Algo2'.  algovid agregarA: 'Cami' aLaBurbuja: 'Ayudantes Algo2'.  algovid nuevaPersona: 'Diego'.  algovid nuevaPersona: 'Valen'.  algovid nuevaBurbuja: 'Ayudantes Algo1'.  algovid agregarA: 'Diego' aLaBurbuja: 'Ayudantes Algo1'.  algovid agregarA: 'Valen' aLaBurbuja: 'Ayudantes Algo1'.  algovid nuevoColegio: 'UBA'.  algovid agregarA: 'Ayudantes Algo1' alColegio: 'UBA'.  algovid agregarA: 'Ayudantes Algo2' alColegio: 'UBA'.  algovid agregarA: 'Ayudantes Algo3' alColegio: 'UBA'.  algovid agregarSintoma: 'Fiebre' a: 'Diego'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Diego'.  algovid agregarSintoma: 'Tos' a: 'Diego'.  self assert: (algovid diagnosticoDe: 'Diego') equals: 'Positivo'.   self assert: (algovid burbujaPinchada: 'Ayudantes Algo1').   self assert: (algovid clasesPresencialesEn: 'UBA').! !!AlgoVidTest methodsFor: 'tests' stamp: 'Seba 4/25/2021 01:24'!test05SiEsConfirmadoDeCovidConTresSintomasNoPuedeCircular  algovid nuevaPersona: 'Cami'.  algovid estaVacunadx: 'Cami'.  "Tres síntomas, pero uno habitual (fiebre, tos o cansancio) lo hace confirmado"   algovid agregarSintoma: 'Fiebre' a: 'Cami'.  algovid agregarSintoma: 'Dolor de cabeza' a: 'Cami'.  algovid agregarSintoma: 'Diarrea' a: 'Cami'.	  self assert: (algovid diagnosticoDe: 'Cami') equals: 'Positivo'.   self deny: (algovid puedeCircular: 'Cami').! !!AlgoVidTest methodsFor: 'tests' stamp: 'Seba 4/24/2021 23:47'!test01PorDefectoNoPuedeSalir  algovid nuevaPersona: 'Joaquin'.    self deny: (algovid puedeCircular: 'Joaquin').! !!AlgoVidTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 01:16'!test21AgregarBurbujaAColegioInexistenteLanzaNoSePudoObtenerColegioalgovid nuevaBurbuja: 'Algo3'.self should:[algovid agregarA: 'Algo3' alColegio: 'UBA'] raise: NoSePudoObtenerColegio .! !!AlgoVidTest methodsFor: 'tests' stamp: 'Seba 4/25/2021 01:26'!test10SiEsPersonaDeRiesgoNoPuedeCircular  algovid nuevaPersona: 'Magui'.  algovid estaVacunadx: 'Magui'.  algovid esPersonaDeRiesgo: 'Magui'.  self deny: (algovid puedeCircular: 'Magui').! !!AlgoVidTest methodsFor: 'running' stamp: 'Seba 4/23/2021 22:05'!setUp	algovid := AlgoVid new. "Aislamiento estricto por defecto"! !TestCase subclass: #DefectoTest	instanceVariableNames: 'defecto'	classVariableNames: ''	package: 'TP1-Tests'!!DefectoTest methodsFor: 'running' stamp: 'Selene 5/21/2021 02:20'!setUp	defecto := Defecto new.! !!DefectoTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 02:17'!test13ActualizarPorBurbujaPinchadaDevuelveInstanciaDeEstrechoPositivoself assert: ((defecto actualizarEstadoPorburbujaPinchada ) isMemberOf: EstrechoPositivo ).! !!DefectoTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 02:03'!test08ContactoEstrechoDevuelveLaMismaInstanciaDeDefectoself assert: (defecto contactoEstrecho ) equals: defecto! !!DefectoTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 01:49'!test02personalEsencialDevuelveInstanciaDePersonalEsencialself assert: (defecto personalEsencial isMemberOf: PersonalEsencial).! !!DefectoTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 02:18'!test14activarProtocoloAUnaBurbujaNoPinchaLaBurbuja|burbuja|burbuja := Burbuja new.defecto activarProtocoloA: burbuja.self deny: (burbuja estaPinchada ).! !!DefectoTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 02:14'!test11ActualizaPorDevuelveContactoEstrechoSospechosoSiRecibeUnEstrechoSospechoso|estrechoSospechoso|estrechoSospechoso := defecto actualizarPor: (EstrechoSospechoso new).self assert: (estrechoSospechoso isMemberOf: EstrechoSospechoso).! !!DefectoTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 01:51'!test05obtenerProtocoloDevuelveUnaInstanciaDeProtocoloNoPositivoself assert: (defecto obtenerProtocolo isMemberOf: ProtocoloNoPositivo ).! !!DefectoTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 02:02'!test05ObtenerActualizadoDevuelveLaMismaInstanciaDeSubClaseDeEstadoAlRecibirla|estadoRecibido estado |estadoRecibido:= Vacunadx new.estado := defecto obtenerActualizado: estadoRecibido.self assert: estado equals: estadoRecibido.! !!DefectoTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 02:15'!test12ActualizarPorDevuelveLaMismaInstanciaDefectoSiNoRecibeEstrechoSospechosoOEstrechoPositivoself assert: (defecto actualizarPor: (Positivo new)) equals: defecto.! !!DefectoTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 01:50'!test04VacunarDevuelveUnaInstanciaDeVacunadxself assert: (defecto vacunar isMemberOf: Vacunadx ).! !!DefectoTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 01:47'!test01obtenerDiagnosticoDevuelveDefectoself assert:(defecto obtenerDiagnostico) equals: 'Defecto'.! !!DefectoTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 02:07'!test09AgregarUnSintomaDevuelveUnaInstanciaDeSospechosoself assert: ((defecto agregarSintoma: 'Fiebre') isMemberOf: Sospechoso).! !!DefectoTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 01:50'!test03NoPuedeCircularself deny: defecto puedeCircular.! !!DefectoTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 02:00'!test07DeRiesgoDevuelveInstanciaDePersonaDeRiesgoself assert: (defecto deRiesgo isMemberOf: PersonaDeRiesgo ).! !!DefectoTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 01:59'!test06HaySintomasHabitualesEnDefectoDevuelveFalseself deny: defecto haySintomasHabituales.! !!DefectoTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 02:13'!test10ActualizarPorDevuelveUnEstrechoPositivoSiRecibeUnEstrechoPositivo|estrechoPositivo|estrechoPositivo := defecto actualizarPor: (EstrechoPositivo new).self assert: (estrechoPositivo isMemberOf: EstrechoPositivo ).! !TestCase subclass: #SospechosoTest	instanceVariableNames: 'sospechoso'	classVariableNames: ''	package: 'TP1-Tests'!!SospechosoTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 02:19'!test01obtenerDiagnosticoDevuelveSospechosoself assert:(sospechoso obtenerDiagnostico) equals: 'Sospechoso'.! !!SospechosoTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 02:22'!test03NoPuedeCircularself deny: sospechoso puedeCircular.! !!SospechosoTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 02:22'!test04VacunarDevuelveSospechosoself assert: (sospechoso vacunar ) equals: sospechoso.! !!SospechosoTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 02:21'!test02personalEsencialDevuelveSospechosoself assert: (sospechoso personalEsencial) equals: sospechoso.! !!SospechosoTest methodsFor: 'tests' stamp: 'Selene 5/21/2021 02:24'!test05ObtenerActualizadoDevuelveLaMismaInstanciaDeSubClaseDeEstadoAlRecibirla|estadoRecibido estado |estadoRecibido:= Vacunadx new.estado := sospechoso obtenerActualizado: estadoRecibido.self assert: estado equals: estadoRecibido.! !!SospechosoTest methodsFor: 'running' stamp: 'Selene 5/21/2021 02:20'!setUp	sospechoso := Sospechoso new.! !